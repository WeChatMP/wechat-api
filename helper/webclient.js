var Iconv = require('iconv').Iconv;var BufferHelper = require('./bufferhelper');module.exports.get = function(host, port, url, callback, encoding, cookie){	if (!encoding)	{		encoding = 'UTF8';	}		var options = {		hostname: host,		port: 80,		path: url,		method: 'GET',		headers: {}	};		if (cookie)		options.headers['Cookie'] = cookie;			var req = require('http').request(options, function(res) {		var bufferHelper = new BufferHelper();				res.on('data', function (chunk) {			bufferHelper.concat(chunk);		});				res.on('error', function (err) {			callback();		});				res.on('end', function () {			var data = new Iconv(encoding, 'UTF8').convert(bufferHelper.toBuffer()).toString();			callback(data, res.headers);		});	});		req.end();}module.exports.post = function(host, port, url, data, callback, encoding, cookie){	if (!encoding)	{		encoding = 'UTF8';	}		var options = {		hostname: host,		port: 80,		path: url,		method: 'POST',		headers: {			'Content-Type': 'application/x-www-form-urlencoded',			'Content-Length': data.length		}	};		if (cookie)		options.headers['Cookie'] = cookie;	var req = require('http').request(options, function(res) {		var bufferHelper = new BufferHelper();				res.on('data', function (chunk) {			bufferHelper.concat(chunk);		});				res.on('error', function (err) {			callback();		});				res.on('end', function () {			var data = new Iconv(encoding, 'UTF8').convert(bufferHelper.toBuffer()).toString();			callback(data, res.headers);		});	});		req.write(data);	req.end();}